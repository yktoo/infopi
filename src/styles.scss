@use 'sass:math';
@import url('https://fonts.googleapis.com/css?family=Ubuntu&display=swap');

@import "vars";

/***********************************************************************************************************************
 Establish base rules
***********************************************************************************************************************/

*,
*::before,
*::after {
    box-sizing: border-box;
}

html {
    font-family: 'Ubuntu', sans-serif;
    font-size: $font-size;
    line-height: 1.15;
}

img {
    vertical-align: middle;
    border-style: none;
}

table {
    border-collapse: collapse;
}

/***********************************************************************************************************************
 Elements
***********************************************************************************************************************/

body {
    margin: 0;
    background-color: $color-body-bg;
    color: $color-body-fg;
    height: 100%;
}

.row {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
}

.flex-grow-1 {
    flex-grow: 1;
}

.flex-basis-40 {
    flex-basis: 40%;
}

.flex-basis-60 {
    flex-basis: 60%;
}

.column {
    display: flex;
    flex-direction: column;
    height: 100%;

    .card {
        display: flex;
        align-items: center;
        padding: 0 0.5rem;
    }
}

.card {
    position: relative;
    text-align: center;
    flex-grow: 1;
    padding: 0.5rem 0;
}

@for $i from 1 through $columns {
    .w-#{$i} {
        flex: 0 0 percentage(math.div($i, $columns));
        max-width: percentage(math.div($i, $columns));
    }
}

table {
    width: 100%;

    td {
        vertical-align: middle;
        border: none;
    }

    // Table with horizontal rulers
    &.h-ruled {
        tr {
            border-bottom: 1px $color-ruler-pale solid;

            &:last-child {
                border-right: none;
            }
        }
    }

    // Table with vertical rulers
    &.v-ruled {
        td, th {
            border-right: 1px $color-ruler-pale solid;

            &:last-child {
                border-right: none;
            }
        }
    }
}

// Headings
@for $i from 1 through 6 {
    h#{$i} {
        text-align: center;
        margin: 1em 0 0.14em 0;
    }
}

@keyframes spinner-border {
    to { transform: rotate(360deg); }
}

// Class that creates an overlay while the content is being loaded
.spinning {
    position: relative;
    min-height: 100px;

    &::before {
        content: '';
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: transparentize(#333, 0.4);
        z-index: 100;
    }
    &::after {
        content: '';
        position: absolute;
        display: inline-block;
        left: 50%;
        top: 50%;
        width: 64px;
        height: 64px;
        border: 0.5em solid $color-accent-2;
        border-right-color: transparent;
        border-radius: 50%;
        animation: .75s linear infinite spinner-border;
        z-index: 101;
    }
}

// Class that creates an overlay when the content is outdated
.outdated {
    position: relative;

    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: 103;
        background: repeating-linear-gradient(135deg, #fff, #444 3px, #222 3px, #444 6px);
        opacity: 0.3;
    }
}

/***********************************************************************************************************************
 Utilities
***********************************************************************************************************************/

.opaque {
    background-color: #000000;
}

.ruler {
    border-bottom: 1px $color-ruler solid;
}
.ruler-top {
    border-top: 1px $color-ruler solid;
}

.pl-1 {
    padding-left: 0.3rem;
}
.pl-2 {
    padding-left: 0.6rem;
}
.pr-1 {
    padding-right: 0.3rem;
}
.pr-2 {
    padding-right: 0.6rem;
}
.pb-1 {
    padding-bottom: 0.3rem;
}
.pb-2 {
    padding-bottom: 0.6rem;
}

.text-center {
    text-align: center;
}

.flex-start {
    align-items: flex-start;
}

.flex-items-stretch {
    align-items: stretch;
}

.flex-nowrap {
    flex-wrap: nowrap !important;
}

.flex-justify-center {
    justify-content: center;
}

.fixed-bottom {
    position: fixed;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 1030;
}

.position-relative {
    position: relative;
}
